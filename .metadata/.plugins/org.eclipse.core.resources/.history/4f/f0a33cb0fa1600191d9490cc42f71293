package Tree;

/**
 * 二叉搜索树---->AVL平衡树--->红黑树
 * 
 * B+/B-/B*树
 * 
 * 
 * @author xubing
 *
 */

public class BinarySearchTree implements TreeOperateInterface {

    // 根节点
    private Node mRoot;

    public BinarySearchTree(int value) {
        insert(value);
    }

    public BinarySearchTree(int[] value) {
        if ((value == null) || (value.length == 0)) {
            return;
        }
        for (int i = 0; i < value.length; i++) {
            insert(value[i]);
        }
    }

    @Override
    public boolean insert(int value) {
       
        return false;
    }
    
    private Node _insert(Node root, int value) {
        
        if(root == null)
        {
            return new Node(value, null, null);
        }
        
        if(value < root.left)
        {
            
        }
        
        return null;
    }

    @Override
    public boolean delete(int value) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public Node find(int value) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void preOrder(Node root) {
        // TODO Auto-generated method stub

    }

    @Override
    public void inOrder(Node root) {
        // TODO Auto-generated method stub

    }

    @Override
    public void postOrder(Node root) {
        // TODO Auto-generated method stub

    }


}
