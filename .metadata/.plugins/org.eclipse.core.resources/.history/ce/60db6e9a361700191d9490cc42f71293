package Tree;

/**
 * 哈夫曼编码--前缀编码
 * 
 * @author xubing
 *
 */
public class HuffmanEnCode {


    public void calcFrequency(String data, char[] result) {
        // 字符都在0~255中
        for (int i = 0; i < data.length(); i++) {
            result[data.charAt(i)]++;
        }
    }

    /**
     * 统计非零的字符个数，同时将没有使用的字符删除 两种方式： 1）将出现过的字符，存储到另外一个集合中 2）再原数组中进行修正
     * 
     * @param result
     */
    public int calcExistChar(char[] result) {

        int count = 0;

        int j = 0;
        for (int i = 0; i < result.length; i++) {
            if (result[i] != 0) {
                count++;
                if (j != i) {
                    result[j] = result[i];
                }
                j++;
            }

        }
        return count;
    }

    public static void main(String[] args) {
        // TODO Auto-generated method stub

    }

}
