package Tree;

/**
 * 指定()数据3组，随机生成3个括号的组合 利用树的思想 A(B)
 * 
 * @author xubing
 *
 */
public class AllParenthesesByTree {

    public static String getAllParenthest(int n) {

        if (n == 0) {
            return "";
        }
        if (n == 1) {
            return "()";
        }

        StringBuilder sb = new StringBuilder();
        String left = null;
        String right = null;

        left = getAllParenthest(i);
        right = getAllParenthest(n - i - 1);
        // unit 合并
        mergetLeftAndRight(sb, left, right);
        System.out.println(sb.toString());
        return sb.toString();
    }

    private static void mergetLeftAndRight(StringBuilder sb, String left, String right) {
        // TODO Auto-generated method stub
        // A(B)
        sb.append(left);
        sb.append("(");
        sb.append(right);
        sb.append(")");
    }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        System.out.println(getAllParenthest(3));
    }

}
