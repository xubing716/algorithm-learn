package LinearList;

import java.util.Arrays;
import java.util.Random;

/**
 * 实现两列表相加
 * 
 * @author xubing
 *
 */
public class TwoLinkedListAdd {

    static class Node {
        int data;
        Node next;

        public Node(int data, Node next) {
            this.data = data;
            this.next = next;
        }

        @Override
        public String toString() {
            return "Node [data=" + data + ", next=" + next + "]";
        }

    }


    public static Node initNodeList(int nodeNums) {
        Random random = new Random();

        Node head = new Node(-1, null);
        Node pre = head;
        for (int i = 0; i < nodeNums; i++) {
            int data = random.nextInt(10);
            Node node = new Node(data, null);
            pre.next = node;
            pre = node;
        }
        return head;
    }


    public static Node addTwoList(Node node1, Node node2) {

        int flag = 0;
        Node pHead = new Node(-1, null);
        Node pre = pHead;

        while (node1 != null && node2 != null) {
            int result = node1.data + node2.data + flag;
            flag = result / 10;
            result = result % 10;

            Node node = new Node(result, null);
            pre.next = node;

            pre = node;

            node1 = node1.next;
            node2 = node2.next;
        }

        Node tmp = node1 == null ? node2 : node1;
        
        while (tmp != null) {
            
            int result = tmp.data + flag;
            flag = result / 10;
            result = result % 10;

            Node node = new Node(result, null);
            pre.next = node;
            pre = node;

            tmp = tmp.next;
        }

        if (flag != 0) {
            pre.next = new Node(flag, null);
        }

        return pHead;
    }
    
    public static void printList(Node node) {
        
    }
    
    public static void main(String[] args) {
        Node node1 = TwoLinkedListAdd.initNodeList(5);
        Node node2 = TwoLinkedListAdd.initNodeList(7);
        Node result = TwoLinkedListAdd.addTwoList(node1, node2);

    }
}
